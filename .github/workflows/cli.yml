name: CLI Build
on:
  push:
    paths-ignore:
      - 'server'
      - 'server/**'
      - 'README.md'
      - 'LICENSE'
      - 'docker-compose.yml'
      - '.github/workflows/server.yml'

jobs:
  build:
    strategy:
      matrix:
        goos: ['linux', 'windows', 'darwin']
        go: ['1.16']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Cache Go Modules
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            '%LocalAppData%\go-build'
          key: cli-${{ runner.os }}-go${{ matrix.go }}-${{ matrix.goos }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            cli-${{ runner.os }}-go${{ matrix.go }}-${{ matrix.goos }}
      - name: Prepare Build
        id: prepare
        run: |
          GO_PKG=`head -n 1 go.mod | awk '{print $2}'`
          VERSION=`git rev-parse --short HEAD`
          TAG=`git tag --points-at HEAD`

          BUILD_FLAGS="-s -w -X ${GO_PKG}/src/cmd.sha1ver=${VERSION} -X ${GO_PKG}/src/cmd.gitTag=${TAG}"
          BUILD_ARGS="-v -trimpath -ldflags=\"${BUILD_FLAGS}\""

          echo ::set-output name=build_args::${BUILD_ARGS}
          echo ::set-output name=tag::${TAG}

          mkdir build
      - name: Build
        working-directory: ./cli
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: amd64
        run: |
          go build ${{ steps.prepare.outputs.build_args }} -o ./build/ ./src
          for file in ./build/* ; do mv "$file" "${file//src/redts}" ; done
      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: redts-go${{ matrix.go }}-${{ matrix.goos }}
          path: ./cli/build/*
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: rEDTS ${{ steps.prepare.outputs.tag }}
          files: ./cli/build/*
